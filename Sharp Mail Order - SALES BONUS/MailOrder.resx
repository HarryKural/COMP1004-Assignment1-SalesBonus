<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>